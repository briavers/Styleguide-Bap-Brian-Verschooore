// -------------------------------------------------------------------
// :: BUTTONS
// -------------------------------------------------------------------
// Use hyperlinks for navigation, buttons for everything else
// Form buttons (input[type="submit", reset, ...) are normalized
// in base/_forms.scss, but use .button classes for styling


// -------------------------------------------------------------------
// :: BUTTON PLACEHOLDER
// -------------------------------------------------------------------
// Solid button with full background color

%a-button {
	position: relative;
	display: inline-block;
	vertical-align: middle;
	overflow: hidden;

	margin: 0;
	padding: rem(8px) rem(15px);

	text-align: center;
	text-decoration: none;
	font-weight: $font-weight-bold;
	word-break: break-all;

	border: none;
	border-radius: 0;

	transition-duration: $animation-duration;
	transition-property: color, background, box-shadow;
	transition-timing-function: $animation-easing;

	cursor: pointer;

	@include at($screen-sm) {
		padding: rem(10px) rem(20px);
	}

	&:hover,
	&:focus,
	&:active {
		text-decoration: none;
	}
}


// -------------------------------------------------------------------
// :: BUTTON MIXIN
// -------------------------------------------------------------------
// Solid button with full background color

@mixin button($_color, $_background, $_border, $_hover-color, $_hover-background) {
	color: $_color;
	background-color: $_background;
	box-shadow: 0 0 0 $border-width $_border inset;

	&:not(.has-icon) [class*="icon"] {

		@if $_background == transparent {
			color: $_color;
		}
	}

	&:not([disabled]) {

		&.is-active,
		&:hover,
		&:focus,
		&:active {
			color: $_hover-color;
			background-color: $_hover-background;

			&:not(.a-button--fixed) {

				@if $_background != transparent {
					box-shadow: 0 0 0 $border-width $_hover-background inset;
				}
			}

			&:not(.has-icon) [class*="icon"] {

				@if $_background == transparent {
					color: $_hover-color;
				} @else {
					color: $_hover-color;
				}
			}
		}
	}


	&[disabled] {
		color: $white;
		background-color: $state-disabled;
		box-shadow: 0 0 0 $border-width $state-disabled inset;
	}
}


// -------------------------------------------------------------------
// :: SOLID BUTTON
// -------------------------------------------------------------------

.a-button {
	@extend %a-button;
	@include button($black, $white, $border-color-dark, $white, $primary-color);

	&.a-button--secondary {
		@include button($white, $secondary-color, $secondary-color, $white, $secondary-color-dark);
	}

	&.a-button--gray {
		@include button($black, $gray-xlight, $border-color-dark, $white, $primary-color);
	}

	&.a-button--blue {
		@include button($white, $blue, $blue, $white, $blue-dark);
	}
}


// -------------------------------------------------------------------
// :: OUTLINE BUTTON
// -------------------------------------------------------------------

.a-button-outline {
	@extend %a-button;
	@include button($black, transparent, $gray, $black, rgba($gray-dark, 0.15));

	&.a-button--white {
		@include button($white, transparent, $white, $white, rgba($white, 0.15));
	}
}


// -------------------------------------------------------------------
// :: TRANSPARENT BUTTON
// -------------------------------------------------------------------

.a-button-transparent {
	@extend %a-button;
	@include button($black, transparent, transparent, rgba($black, 0.6), transparent);

	&.a-button--white {
		@include button($white, transparent, transparent, rgba($white, 0.6), transparent);
	}
}


// -------------------------------------------------------------------
// :: DECORATED BUTTONS
// -------------------------------------------------------------------
// Decorated buttons with icons before or after a text label

.a-button,
.a-button-outline,
.a-button-transparent {

	&:not(.has-icon) {

		[class*="icon"] {
			font-size: rem(18px);

			color: $text-color-xlight;

			transition: color $animation-duration;

			@include at($screen-sm) {
				font-size: rem(24px);
			}
		}

		span + [class*="icon"],
		[class*="icon"] + span {
			margin-left: rem(10px);

			@include at($screen-sm) {
				margin-left: rem(15px);
			}
		}
	}
}


// -------------------------------------------------------------------
// :: ICON BUTTONS
// -------------------------------------------------------------------

.a-button,
.a-button-outline,
.a-button-transparent {

	&.has-icon {
		width: rem(50px);
		height: rem(50px);

		padding: 0;

		[class*="icon"] {
			position: absolute;
			top: 50%;
			left: 50%;

			font-size: $icon-size;
			line-height: 1;

			transform: translate(-50%, -50%);
		}

		&[class*="icon-"] {
			font-size: $icon-size;
			line-height: rem(50px);
		}

		&.a-button--xs {
			width: rem(30px);
			height: rem(30px);

			[class*="icon"],
			&[class*="icon-"] {
				font-size: $icon-size-xs;
			}

			&[class*="icon-"] {
				line-height: rem(30px);
			}
		}

		&.a-button--sm {
			width: rem(40px);
			height: rem(40px);

			[class*="icon"],
			&[class*="icon-"] {
				font-size: $icon-size-sm;
			}

			&[class*="icon-"] {
				line-height: rem(40px);
			}
		}

		&.a-button--lg {
			width: rem(55px);
			height: rem(55px);

			[class*="icon"],
			&[class*="icon-"] {
				font-size: $icon-size-lg;
			}

			&[class*="icon-"] {
				line-height: rem(55px);
			}
		}
	}
}


// -------------------------------------------------------------------
// :: BUTTONS MODIFIERS
// -------------------------------------------------------------------

.a-button,
.a-button-outline,
.a-button-transparent {

	&.a-button--no-border {
		box-shadow: none;
	}

	&.a-button--full {
		width: 100%;
	}

	&.a-button--round {
		border-radius: 30px;
	}

	&.a-button--fixed {
		position: fixed;
		right: $spacer;
		bottom: $spacer;

		box-shadow: $box-shadow-md;

		z-index: layer("toggle");
	}
}
